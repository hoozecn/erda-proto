syntax = "proto3";

package erda.core.hepa.endpoint_api;
option go_package = "github.com/erda-project/erda-proto-go/core/hepa/endpoint_api/pb";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "core/hepa/hepa.proto";

// +publish service:"hepa"
service EndpointApiService {
  // +publish path: "/api/gateway/openapi/packages-name"
  rpc GetEndpointsName(GetEndpointsNameRequest) returns (GetEndpointsNameResponse) {
    option (google.api.http) = {
      get: "/api/gateway/openapi/packages-name?projectId={projectId}&env={env}",
    };
  }

  // +publish path: "/api/gateway/openapi/packages"
  rpc GetEndpoints(GetEndpointsRequest) returns (GetEndpointsResponse) {
    option (google.api.http) = {
      get: "/api/gateway/openapi/packages?projectId={projectId}&env={env}&pageNo={pageNo}&pageSize={pageSize}&sortField={sortField}&sortType={sortType}&domain={domain}",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}"
  rpc GetEndpoint(GetEndpointRequest) returns (GetEndpointResponse) {
    option (google.api.http) = {
      get: "/api/gateway/openapi/packages/{packageId}",
    };
  }

  // +publish path: "/api/gateway/openapi/packages"
  rpc CreateEndpoint(CreateEndpointRequest) returns (CreateEndpointResponse) {
    option (google.api.http) = {
      post: "/api/gateway/openapi/packages?projectId={projectId}&env={env}",
      body: "endpoint",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}"
  rpc UpdateEndpoint(UpdateEndpointRequest) returns (UpdateEndpointResponse) {
    option (google.api.http) = {
      patch: "/api/gateway/openapi/packages/{packageId}",
      body: "endpoint",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}"
  rpc DeleteEndpoint(DeleteEndpointRequest) returns (DeleteEndpointResponse) {
    option (google.api.http) = {
      delete: "/api/gateway/openapi/packages/{packageId}",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}/apis"
  rpc GetEndpointApis(GetEndpointApisRequest) returns (GetEndpointApisResponse) {
    option (google.api.http) = {
      get: "/api/gateway/openapi/packages/{packageId}/apis",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}/apis"
  rpc CreateEndpointApi(CreateEndpointApiRequest) returns (CreateEndpointApiResponse) {
    option (google.api.http) = {
      post: "/api/gateway/openapi/packages/{packageId}/apis",
      body: "endpointApi",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}/apis/{apiId}"
  rpc UpdateEndpointApi(UpdateEndpointApiRequest) returns (UpdateEndpointApiResponse) {
    option (google.api.http) = {
      patch: "/api/gateway/openapi/packages/{packageId}/apis/{apiId}",
      body: "endpointApi",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}/apis/{apiId}"
  rpc DeleteEndpointApi(DeleteEndpointApiRequest) returns (DeleteEndpointApiResponse) {
    option (google.api.http) = {
      delete: "/api/gateway/openapi/packages/{packageId}/apis/{apiId}",
    };
  }

  // +publish path: "/api/gateway/openapi/packages/{packageId}/root-api"
  rpc ChangeEndpointRoot(ChangeEndpointRootRequest) returns (ChangeEndpointRootResponse) {
    option (google.api.http) = {
      put: "/api/gateway/openapi/packages/{packageId}/root-api",
      body: "endpointApi",
    };
  }

}

message ChangeEndpointRootResponse {
  bool data = 1;
}

message ChangeEndpointRootRequest {
  string packageId = 1;
  EndpointApi endpointApi = 2;
}

message DeleteEndpointApiRequest {
  string packageId = 1;
  string apiId = 2;
}

message DeleteEndpointApiResponse {
  bool data = 1;
}

message UpdateEndpointApiResponse {
  EndpointApi data = 1;
}

message UpdateEndpointApiRequest {
  string packageId = 1;
  string apiId = 2;
  EndpointApi endpointApi = 3;
}

message CreateEndpointApiResponse {
  string data = 1;
}

message EndpointApi {
  string apiPath = 1;
  string redirectType = 2;
  string redirectAddr = 3;
  string redirectPath = 4;
  string redirectService = 5;
  string redirectRuntimeId = 6;
  string redirectRuntimeName = 7;
  google.protobuf.Value method = 8;
  bool allowPassAuth = 9;
  string description = 10;
  repeated string hosts = 11;
  string apiId = 12;
  string createAt = 13;
  string diceApp = 14;
  string diceService = 15;
  string origin = 16;
  bool mutable = 17;
}

message CreateEndpointApiRequest {
  string packageId = 1;
  EndpointApi endpointApi = 2;
}

message GetEndpointApisRequest {
  string packageId = 1;
}

message GetEndpointApisResponse {
  erda.core.hepa.NewPageResult data = 1;
}

message DeleteEndpointRequest {
  string packageId = 1;
}

message DeleteEndpointResponse {
  bool data = 1;
}

message UpdateEndpointResponse {
  Endpoint data = 1;
}

message UpdateEndpointRequest {
  string packageId = 1;
  Endpoint endpoint = 2;
}

message CreateEndpointResponse {
  Endpoint data = 1;
}

message CreateEndpointRequest {
  string projectId = 1;
  string env = 2;
  Endpoint endpoint = 3;
}

message GetEndpointsNameRequest {
  string env = 1;
  string projectId = 2;
}

message Endpoint {
  string id = 1;
  string createAt = 2;
  string name = 3;
  repeated string bindDomain = 4;
  string authType = 5;
  string aclType = 6;
  string scene = 7;
  string description = 8;
}

message GetEndpointsNameResponse {
  repeated Endpoint data = 1;
}

message GetEndpointsRequest {
  string projectId = 1;
  string env = 2;
  int64 pageNo = 3;
  int64 pageSize = 4;
  string sortField = 5;
  string sortType = 6;
  string domain = 7;
}

message GetEndpointsResponse {
  erda.core.hepa.NewPageResult data = 1;
}

message GetEndpointRequest {
  string packageId = 1;
}

message GetEndpointResponse {
  Endpoint data = 1;
}